// /processors/messages/autoKick.mjs

import logger from '../../utils/logger.mjs';
import client from '../../client.mjs';

export async function autoKick(message, messageMeta, chat) {
    try {
        // ุงูุชุญูู ููุง ุฅุฐุง ูุงูุช ุงูุฑุณุงูุฉ ุชุญุชูู ุนูู ุฑุงุจุท
        const linkPattern = /(https?:\/\/[^\s]+)/g;
        if (!linkPattern.test(message.body)) return;

        // ุงูุชุฃูุฏ ูู ุฃู ุงูุฑุณุงูุฉ ูู ูุฑูุจ
        if (!messageMeta.isGroup) return;

        // ุงูุญุตูู ุนูู ุฑูู ุงููุฑุณู
        const senderId = message.author || message.from;

        // ุงูุชุญูู ูู ุฃู ุงูุจูุช ููุณู ูุดุฑู
        const botId = client.info.wid._serialized;
        const botParticipant = chat.participants.find(
            (participant) => participant.id._serialized === botId
        );
        if (!botParticipant || !botParticipant.isAdmin) {
            logger.info("ุงูุจูุช ููุณ ูุดุฑููุงุ ูุฐุง ูุง ููููู ุญุฐู ุงูุฃุนุถุงุก.");
            return;
        }

        // ุงูุชุญูู ููุง ุฅุฐุง ูุงู ุงููุฑุณู ูุดุฑููุง
        const senderParticipant = chat.participants.find(
            (participant) => participant.id._serialized === senderId
        );
        if (senderParticipant && senderParticipant.isAdmin) return; // ูุง ุชูู ุจุทุฑุฏ ุงููุดุฑููู

        // ุญุฐู ุฑุณุงูุฉ ุงููุฑุณู (ุงุฎุชูุงุฑู)
        await message.delete(true).catch(() => { });
        // ุทุฑุฏ ุงูุนุถู ูู ุงููุฑูุจ
        await chat.removeParticipants([senderId]).catch(() => { });
        logger.info(`ุชู ุทุฑุฏ ${senderId} ูู ุงููุฑูุจ ุจุณุจุจ ุฅุฑุณุงู ุฑุงุจุท.`);

        // ุฅุฑุณุงู ุฑุณุงูุฉ ุชูุถูุญูุฉ ููุนุถู
        await message.reply(`๐ซ ุชู ุทุฑุฏู ูู ุงููุฑูุจ ุจุณุจุจ ูุฎุงููุฉ ุงูููุงููู ูุฅุฑุณุงู ุฑูุงุจุท.`);
    } catch (error) {
        logger.error('Error in autoKick:', error);
    }
}
